// ====================
// Mixins
// ====================
@use "variables" as *;

// @include background(value);
// example @include background(red);
@mixin background($background-color: $background) {
  background: $background-color;
}

// Center Elements
// @include center;
// this may need display: block to work
@mixin center {
  margin-left: auto;
  margin-right: auto;
}

// Hide from both screenreaders and browsers
// @include hidden;
@mixin hidden {
  display: none !important;
  visibility: hidden;
}

//@include hide-text;
@mixin hide-text {
  overflow: hidden;
  text-indent: 104%;
  white-space: nowrap;
}

// Simple breakpoints - base styles are phone first
// eg @include media(500)
@mixin media($point) {
  @if $point==900 {
    @media only screen and (min-width: 900px) {
      @content;
    }
  } @else if $point==700 {
    @media only screen and (min-width: 700px) {
      @content;
    }
  } @else if $point==500 {
    @media only screen and (min-width: 500px) {
      @content;
    }
  } @else if $point==$point {
    @media only screen and (min-width: $point + px) {
      @content;
    }
  }
}

//@include border-top-radius(5px);
@mixin border-top-radius($rad) {
  border-top-left-radius: $rad;
  border-top-right-radius: $rad;
}

//@include border-right-radius(5px);
@mixin border-right-radius($rad) {
  border-bottom-right-radius: $rad;
  border-top-right-radius: $rad;
}

//@include border-bottom-radius(5px);
@mixin border-bottom-radius($rad) {
  border-bottom-left-radius: $rad;
  border-bottom-right-radius: $rad;
}

//@include border-left-radius(5px);
@mixin border-left-radius($rad) {
  border-bottom-left-radius: $rad;
  border-top-left-radius: $rad;
}

//@include size(100px);
//@include size(100px, 50px); requires comma
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

//@include hide-visually;
//@include hide-visually("unhide"); requires quotes
@mixin hide-visually($toggle: "hide") {
  @if not index("hide" "unhide", $toggle) {
    @error "`#{$toggle}` is not a valid value for the `$toggle` argument in " +
      "the `hide-visually` mixin. Must be either `hide` or `unhide`.";
  } @else if $toggle == "hide" {
    border: 0;
    clip-path: inset(100%);
    height: 1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  } @else if $toggle == "unhide" {
    clip-path: none;
    height: auto;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
  }
}

//@include triangle("up", 2rem, 1rem, #b25c9c);
@mixin triangle(
  $direction,
  $width,
  $height,
  $color
) {
  @if not index(
    "up" "up-right" "right" "down-right" "down" "down-left" "left" "up-left",
    $direction
  ) {
    @error "Direction must be `up`, `up-right`, `right`, `down-right`, " +
      "`down`, `down-left`, `left` or `up-left`.";
  } @else if not _is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
      "the `triangle` mixin.";
  } @else {
    border-style: solid;
    height: 0;
    width: 0;

    @if $direction == "up" {
      border-color: transparent transparent $color;
      border-width: 0 ($width / 2) $height;
    } @else if $direction == "up-right" {
      border-color: transparent $color transparent transparent;
      border-width: 0 $width $width 0;
    } @else if $direction == "right" {
      border-color: transparent transparent transparent $color;
      border-width: ($height / 2) 0 ($height / 2) $width;
    } @else if $direction == "down-right" {
      border-color: transparent transparent $color;
      border-width: 0 0 $width $width;
    } @else if $direction == "down" {
      border-color: $color transparent transparent;
      border-width: $height ($width / 2) 0;
    } @else if $direction == "down-left" {
      border-color: transparent transparent transparent $color;
      border-width: $width 0 0 $width;
    } @else if $direction == "left" {
      border-color: transparent $color transparent transparent;
      border-width: ($height / 2) $width ($height / 2) 0;
    } @else if $direction == "up-left" {
      border-color: $color transparent transparent;
      border-width: $width $width 0 0;
    }
  }
}

//@include ellipsis;
@mixin ellipsis(
  $width: 100%,
  $display: inline-block
) {
  display: $display;
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

